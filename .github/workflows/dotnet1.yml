# This workflow will build, test, containerize, push, and deploy a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI/CD

env:
  registryName: cnr572dhcfwcimpnpreg.azurecr.io
  repositoryName: techexcel/dotnetcoreapp
  dockerFolderPath: ./src/Application/src/RazorPagesTestSample
  tag: ${{ github.run_number }}
  webAppName: cnr572dhcfwci # Replace with your actual Web App name

on:
  push:
    branches: [main]
    paths: src/Application/**
  pull_request:
    branches: [main]
    paths: src/Application/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj

      - name: Build
        run: dotnet build --no-restore ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj

      - name: Test
        run: dotnet test --no-build --verbosity normal ./src/Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registryName }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }} ${{ env.dockerFolderPath }}

      - name: Docker Push
        run: docker push ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensures 'deploy' runs after 'build' job completes successfully

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2.1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure WebApp Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ env.webAppName }}-dev"
          images: "${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}"
          # Alternatively, if you're not using Docker, you can use the publish profile
          # publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
          # package: .
